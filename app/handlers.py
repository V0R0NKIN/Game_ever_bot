from aiogram.filters import Command
import random
from asyncio import sleep
from aiogram import Bot, Dispatcher, exceptions, types
from aiogram.types import Message, CallbackQuery
from aiogram import Router, F
from app.keyboard import instrument, start, progeckt, ponel, ruels
from aiogram.enums.dice_emoji import DiceEmoji

# –£—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –≤–∞—Ä—Ç–æ –∑–∞–∫—Ä—ñ–ø–ª—é–≤–∞—Ç–∏ –∑–∞ Router –∞–±–æ Dispatcher
router = Router()
@router.message(Command('infa'))
async def command_start_handler(message: Message) -> None:
    await message.answer(f"–ü—Ä–∏–≤—ñ—Ç {message.from_user.full_name}!\n–¶–µ–π –±–æ—Çüóø –ó—Ä–æ–±–ª–µ–Ω –∑–∞–≤–¥—è–∫–∏ –º–æ–≤—ñ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è Pythonüíª\n–≤ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—ñ GoIteens.\nü´µ–¢–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è\n—Ç–æ–¥—ñ –∑–∞—Ö–æ–¥—å –Ω–∞ —ó—Ö —Å–∞–π—Ç\n —Å–∏–ª–∫–∞ —Ç—É—Çüëâ https://goiteens.com/course/design/\n–î—è–∫—É—é –∑–∞ —É–≤–∞–≥—É")

#============================================================

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
@router.message(Command('start'))
async def command_my_keyboard0(message: Message):
    await message.answer(text=f"–ü—Ä–∏–≤—ñ—Ç {message.from_user.full_name} \n–î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æ‚úîÔ∏è", reply_markup=ponel())
    await message.answer(text="–¶–µ –≤—Å—ñ –Ω–∞—à—ñ —Ä–æ–∑–¥—ñ–ª–∏", reply_markup=start())

# –ö–æ–º–∞–Ω–¥–∞ –∫–æ—Å—Ç–∏
@router.message(F.text == "Dice")
async def Dice(message: Message):
    await message.answer_dice(emoji=DiceEmoji.DICE)

# –ú–æ–Ω–µ—Ç–∫–∞
@router.message(F.text == "Monetka")
async def Monetka  (message: Message):
    many = ["üéá–û—Ä—ë–ªüéá", "üéÜ–†–µ—à–∫–∞üéÜ"]
    random_many = random.choice(many)
    await message.answer(f"–í–∏–ø–∞–ª–æ {random_many}")

# –Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏
@router.callback_query(F.data == "_5")
async def my_keyboard5(callback: CallbackQuery):
        await callback.message.answer("üé≤–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–ª—è\n–Ω–∞—Å—Ç—ñ–ª—å–Ω–∏—Ö —ñ–≥–æ—ÄüèÄ", reply_markup=progeckt())
        await callback.answer()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
@router.callback_query(F.data == "_6")
async def my_keyboard7(callback: CallbackQuery):
    await callback.message.answer(text="üé≤–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏üèÄ", reply_markup=instrument())
    await callback.answer()

@router.callback_query(F.data == "_8")
async def my_keyboard8(callback: CallbackQuery) -> None:
    await callback.message.answer_dice(emoji=DiceEmoji.DICE)
    await callback.answer()

@router.callback_query(F.data == "_9")
async def my_keyboard9(callback: CallbackQuery):
    many = ["–û—Ä—ë–ªü™ô", "–†–µ—à–∫–∞ü™ô"]
    random_many = random.choice(many)
    await callback.message.answer(f"–í–∏–ø–∞–ª–æ {random_many}")
    await callback.answer()


#–ü—Ä–∞–≤–∏–ª–∞ —Ç—Ä—å–æ—Ö —ñ–≥–æ—Ä
@router.callback_query(F.data == "_7")
async def my_keyboard7(callback: CallbackQuery):
    await callback.message.answer(text="–ü—Ä–∞–≤–∏–ª–∞ —Ç—Ä—å–æ—Ö —ñ–≥–æ—Ä", reply_markup=ruels())
    await callback.answer()
@router.callback_query(F.data == "_1")
async def my_keyboard1(callback: CallbackQuery):
    await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ —ñ–≥—Ä–∏ UNO‚è∫:\nhttps://www.youtube.com/watch?v=6VzWiOi7R4U")
    await callback.answer()
@router.callback_query(F.data == "_2")
async def my_keyboard2(callback: CallbackQuery):
    await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ —ñ–≥—Ä–∏ –≤ –¥—É—Ä–∞–∫–∞‚ô†Ô∏è:\nhttps://www.youtube.com/watch?v=qk67UHo6IlE")
    await callback.answer()
@router.callback_query(F.data == "_3")
async def my_keyboard3(callback: CallbackQuery):
    await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ —ñ–≥—Ä–∏ –ø–æ–∫–µ—ÄüÉè:\nhttps://www.youtube.com/watch?v=JLAi4XxF6dk")
    await callback.answer()
